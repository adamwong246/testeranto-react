src/react-test-renderer/component/index.ts
9:29 Unexpected any. Specify a different type. (@typescript-eslint/no-explicit-any)
- undefined (fix)
- undefined (fix)
18:13 Unexpected any. Specify a different type. (@typescript-eslint/no-explicit-any)
- undefined (fix)
- undefined (fix)
23:39 'tr' is defined but never used. (@typescript-eslint/no-unused-vars)
26:30 'store' is defined but never used. (@typescript-eslint/no-unused-vars)
26:37 'ndx' is defined but never used. (@typescript-eslint/no-unused-vars)
26:42 'artificer' is defined but never used. (@typescript-eslint/no-unused-vars)
29:14 'store' is defined but never used. (@typescript-eslint/no-unused-vars)
29:21 'artificer' is defined but never used. (@typescript-eslint/no-unused-vars)
37:10 Unexpected any. Specify a different type. (@typescript-eslint/no-explicit-any)
- undefined (fix)
- undefined (fix)
37:15 Unexpected any. Specify a different type. (@typescript-eslint/no-explicit-any)
- undefined (fix)
- undefined (fix)

src/react-test-renderer/component/test/index.ts
6:10 'act' is defined but never used. (@typescript-eslint/no-unused-vars)
14:10 The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead. (@typescript-eslint/no-empty-object-type)
- undefined (fix)
- undefined (fix)
35:16 'error' is defined but never used. (@typescript-eslint/no-unused-vars)
79:18 Unexpected any. Specify a different type. (@typescript-eslint/no-explicit-any)
- undefined (fix)
- undefined (fix)
80:19 Unexpected any. Specify a different type. (@typescript-eslint/no-explicit-any)
- undefined (fix)
- undefined (fix)